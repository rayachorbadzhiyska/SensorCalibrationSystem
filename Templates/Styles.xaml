<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:SensorCalibrationSystem.Converters">

	<Style x:Key="ConfigureButtonStyle" TargetType="Button">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template" Value="{StaticResource ConfigureButtonTemplate}" />
	</Style>

	<Style x:Key="TitleBarButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="border"
						Background="Transparent"
						BorderThickness="0"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Focusable="False"
							RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="border"
						Background="Transparent"
						BorderThickness="0"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Focusable="False"
							RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationMenuItemStyle" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template" Value="{StaticResource NavigationMenuTemplate}" />
		<Setter Property="Background" Value="Transparent" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="LightGray" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="BoardDisplayButtonStyle" TargetType="RadioButton">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Border
						Name="ContentView"
						Margin="0,0,1,0"
						Background="#d2e6f7"
						BorderBrush="Black"
						BorderThickness="1"
						CornerRadius="5">
						<ContentPresenter
							Name="ContentText"
							Margin="10,5"
							HorizontalAlignment="Right" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ContentView" Property="Background" Value="#b5d5f2" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="ContentView" Property="Background" Value="#97c4ec" />
							<Setter TargetName="ContentText" Property="TextBlock.FontWeight" Value="SemiBold" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SensorInformationItemContainerStyle" TargetType="ListBoxItem">
		<Setter Property="Margin" Value="3" />
		<Setter Property="Template" Value="{StaticResource SensorInformationTemplate}" />
	</Style>

	<Style x:Key="MemoryMapTabControlStyle" TargetType="TabControl">
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="TabItem">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="TabItem">
								<Border
									Name="Border"
									Margin="2,0"
									BorderBrush="Gainsboro"
									BorderThickness="1,1,1,0"
									CornerRadius="4,4,0,0">
									<ContentPresenter
										x:Name="ContentSite"
										Margin="12,4"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Content="{Binding Sensor}" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter TargetName="Border" Property="Background" Value="White" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="False" />
											<Condition Property="IsMouseOver" Value="False" />
										</MultiTrigger.Conditions>
										<MultiTrigger.Setters>
											<Setter TargetName="Border" Property="Background" Value="#f4f4f4" />
										</MultiTrigger.Setters>
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="False" />
											<Condition Property="IsMouseOver" Value="True" />
										</MultiTrigger.Conditions>
										<MultiTrigger.Setters>
											<Setter TargetName="Border" Property="Background" Value="#dddddd" />
										</MultiTrigger.Setters>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MemoryMapColumnStyle" TargetType="DataGridCell">
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Margin" Value="5,0" />
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="MemoryMapColumnHeaderStyle" TargetType="DataGridColumnHeader">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridColumnHeader">
					<ContentPresenter
						Margin="5,0,0,5"
						HorizontalAlignment="Left"
						TextBlock.FontWeight="SemiBold"
						TextBlock.Foreground="SteelBlue" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MemoryMapValueColumnHeaderStyle" TargetType="DataGridColumnHeader">
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridColumnHeader">
					<StackPanel Orientation="Horizontal">
						<ComboBox ItemsSource="{Binding DataContext.ValueFormats, RelativeSource={RelativeSource AncestorType=Page}}" SelectedItem="{Binding DataContext.SelectedValueFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=Page}}" />
						<Label
							Margin="5,0,0,5"
							Content="Value"
							FontWeight="SemiBold"
							Foreground="SteelBlue" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MemoryMapRowStyle" TargetType="DataGridRow">
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="#191919" />
			</Trigger>
			<Trigger Property="IsSelected" Value="False">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#5e5e5e" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="MemoryMapValueTextBoxStyle" TargetType="TextBox">
		<Style.Resources>
			<converters:ValueFormatConverter x:Key="ValueFormatConverter" />
		</Style.Resources>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Access}" Value="read-only">
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="IsReadOnly" Value="True" />
				<Setter Property="Text">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ValueFormatConverter}">
							<Binding
								Path="DataContext.SelectedValueFormat"
								RelativeSource="{RelativeSource AncestorType=Page}"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding
								Mode="TwoWay"
								Path="Value"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding Path="Size" UpdateSourceTrigger="PropertyChanged" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Access}" Value="read-write">
				<Setter Property="BorderThickness" Value="0,0,0,1" />
				<Setter Property="Text">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ValueFormatConverter}">
							<Binding
								Path="DataContext.SelectedValueFormat"
								RelativeSource="{RelativeSource AncestorType=Page}"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding
								Mode="TwoWay"
								Path="Value"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding Path="Size" UpdateSourceTrigger="PropertyChanged" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Access}" Value="write-only">
				<Setter Property="BorderThickness" Value="0,0,0,1" />
				<Setter Property="Text" Value="" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="MemoryMapLabelStyle" TargetType="Label">
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template" Value="{StaticResource MemoryMapLabelTemplate}" />
	</Style>

</ResourceDictionary>